#!/bin/bash

VARIABLES()
{
VAR=$(curl -sL git.io/pSf | grep "VAR" | awk '{print $1}' | head -n1 | cut -c 5-)
API=$(curl -sL https://api.github.com/repos/jasut1n/prism-attack)
STAR=$(printf "$API" | grep stargazers_count | tr -d ' stargazers_count:",')
FORK=$(printf "$API" | grep forks_count | tr -d ' forks_count:",')
SIZE=$(printf "$API" | grep size | tr -d ' size:",')
SIZE=$(echo "$(( ${SIZE} / 1024)) MB")
LIMT=$(echo "$API"  | grep -o "limit exceeded")
LINK="https://github.com/jasut1n/prism-attack"
OS=$(uname -o | grep -o "Android")
NAME="prism-attack"
}


printf "\r:: Checking for installation..."
VARIABLES
printf "                               \r"

RNAME() {
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w ${1:-} | head -n 1
}
RNAME=$(RNAME 10)

SL() {
sleep 0.01
}

DISCLAIMER()
{
  echo -e "${C1}Disclaimer${R0} : The use of the ${C2}${B0}prism-attack${R0} and/or its resources is complete responsibility of the end-user. Developers assume no liabiity and are not responsible for any misuse or damage caused by ${C2}${B0}prism-attack${R0}. Some of your actions may be illegal and you can not use this software to test someone without written permission from person or company.${R0}\n"
}

function START() {
if [[ ${LIMT} == "limit exceeded" ]]
then cd ${HOME}
STAR="api limit exceeded"
FORK="api limit exceeded"
SIZE="api limit exceeded"
fi
printf "${C2}<${R0} Welcome to our Project Prism Att&ck. ${C2}/>${R0}\n";SL
printf "${C4}Star:${R0} $STAR\n";SL
printf "${C4}Fork:${R0} $FORK\n";SL
printf "${C4}Size:${R0} $SIZE\n";SL
printf "${C4}Version:${R0} $VAR\n";SL
printf "${C4}Give Star On:${R0} ${R4}$LINK${R0}\n\n";SL
printf "${C2}(${R0}>${C2})${R0} Prism Att&ck Installing...\n";SL
}

function COMPLETE() {
echo -e "${C4}(${R0}>${C4})${R0} Prism Att&ck installation finished.
${C4}(${R0}>${C4})${R0} Type ${C2}prismconsole${R0} for start."
}

function ALREADY() {
  echo -e "${C4}(${R0}>${C4})${R0} Prism Att&ck is already installed to ${C2}${presentDIR}${R0}
${C4}(${R0}>${C4})${R0} Type ${C2}prismconsole${R0} for start."
exit 0
}

function forTermux () {
if [ ! -d "${presentDIR}" ]
then
DISCLAIMER
START
cat <<- CONF > $PREFIX/bin/prismconsole
#!$PREFIX/bin/bash
DIRNAME="${confDIRNAME}"
PNAME="prismconsole"

cd \${DIRNAME}
bash \${PNAME} \${@}
CONF
chmod +x $PREFIX/bin/prismconsole
git clone ${LINK} ${confDIRNAME}
COMPLETE
else
ALREADY
fi
}

function forLinux () {
  if [ ! -d "${presentDIR}" ]
then
DISCLAIMER
START
cat <<- CONF > prismconsole
#!/usr/bin/bash
DIRNAME="${confDIRNAME}"
PNAME="prismconsole"

cd \${DIRNAME}
bash \${PNAME} \${@}
CONF
sudo mv prismconsole /usr/bin
sudo chmod +x /usr/bin/prismconsole
sudo git clone ${LINK} ${confDIRNAME}
sudo chown -R $(whoami):$(whoami) ${confDIRNAME}
COMPLETE
else
ALREADY
fi
}

if [[ $OS == *'Android'* ]];then
confDIRNAME="${PREFIX}/share/prism-attack"

#....
if [[ ! -f "${PREFIX}/etc/prisminstall.conf" ]]
then
  presentDIR=""
else
  source ${PREFIX}/etc/prisminstall.conf
  presentDIR="${installDIR}"
fi
#....

if [[ $1 == "--dir" ]]
then
  unset confDIRNAME
  confDIRNAME="${2}/${NAME}"
fi
forTermux
 echo "installDIR=\"${confDIRNAME}\"" > $PREFIX/etc/prisminstall.conf
else
confDIRNAME="/usr/share/prism-attack"

#....
if [[ ! -f "/etc/prisminstall.conf" ]]
then
  presentDIR=""
else
  source /etc/prisminstall.conf
  presentDIR="${installDIR}"
fi
#....

if [[ $1 == "--dir" ]]
then
  unset confDIRNAME
  confDIRNAME="${2}/${NAME}"
fi
forLinux
 echo "installDIR=\"${confDIRNAME}\"" > prisminstall.conf
 sudo mv prisminstall.conf /etc
fi
